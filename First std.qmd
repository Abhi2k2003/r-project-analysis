---
title: "First std"
format: pdf
editor: visual
editor_options: 
  chunk_output_type: console
---

# Vital Statistics-Based Planning for 2025 School Enrollment

Vital Statistics-Based Planning for 2025 School Enrollment involves using key demographic data—such as birth rates, population growth, and child mortality rates—to accurately estimate the number of children eligible for school enrollment in 2025. By analyzing birth records from previous years (typically 4–6 years prior), planners can forecast the demand for school infrastructure, teachers, and educational resources. This approach ensures efficient allocation of educational facilities and helps in making informed policy decisions to meet the needs of the upcoming student population.

## No of persons born in 2019 in the Birth registration data (2019-2023)

```{r}
suppressPackageStartupMessages(library(tidyverse))
library(lubridate)
library(gt)
library(pander)

process_birth_data <- function(file) {
  read_csv(file) %>%
    mutate(
      DOB = mdy(BIRTH_DATE),
      DOR = mdy(REG_DATE),
      Birthyear = year(DOB),
      Regyear = year(DOR)
    ) %>%
    filter(Birthyear == 2019)
}

files <- c("Birth 2019.csv",
           "Birth 2020.csv",
           "Birth 2021.csv",
           "Birth 2022.csv",
           "Birth 2023.csv")
all_data_2019 <- suppressMessages(map_dfr(files, process_birth_data))


district_lookup <- tibble(
  DISTRICT_CODE = 1:14,
  DISTRICT_NAME = c(
    "Kasaragod", "Kannur", "Wayanad",
    "Kozhikkode", "Malappuram", "Palakkad",
    "Thrissur","Eranakulam", "Idukki",
    "Kottayam", "Alappuzha", "Pathanamthitta",
    "Kollam", "Thiruvananthapuram"
  )
)

summary_by_district <- all_data_2019 %>%
  group_by(DISTRICT_CODE, SEX) %>%
  summarise(Count = n(), .groups = "drop") %>%
  left_join(district_lookup, by = "DISTRICT_CODE") %>%
  select(DISTRICT_CODE, DISTRICT_NAME, SEX, Count) %>%
  arrange(DISTRICT_CODE, SEX)

summary_by_district %>% 
  gt() %>% 
  tab_header(
    title = "Total Number of children Born in 2019 (Combined Data 2019–2023)")

# Total by sex
total_by_sex <- all_data_2019 %>%
  group_by(SEX) %>%
  summarise(Total = n(), .groups = "drop")

total_by_sex %>% 
  gt() %>% 
  tab_header("Total no of children born in 2019 (Combined Data 2019–2023)")

male_count <- total_by_sex %>%
  filter(SEX == 1) %>%
  pull(Total)
female_count <- total_by_sex %>%
  filter(SEX == 2) %>%
  pull(Total)

Total <- male_count+female_count

pander::pander(Total)

# Bar plot for births by district and sex
ggplot(summary_by_district,
       aes(x = DISTRICT_NAME, y = Count, fill = factor(SEX))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Number of children Born in 2019 by District and Sex",
    x = "District",
    y = "Count",
    fill = "Sex"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Pie chart for total births by sex
sex_data <- total_by_sex %>%
  mutate(SexLabel = ifelse(SEX == 1, "Male", "Female"))

ggplot(sex_data, aes(x = "", y = Total, fill = SexLabel)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar(theta = "y") +
  labs(
    title = "Total Number of Births in 2019 by Sex",
    fill = "Sex"
  ) +
  theme_void()

```

## No of children dead which has born in 2019 from the death registration data (2019-2023)

```{r}
## 2023

data <- suppressMessages(read_csv("Death 2023.csv"))

data_1 <- data %>% 
  mutate(
    DOD = mdy(DEATH_DATE),
    DOR = mdy(REG_DATE),
    Deathyear = year(DOD),
    Regyear = year(DOR)
    )

infant_data <- data_1 %>% 
  filter(AGE_YEAR %in% c(4))

no_2023 <- infant_data %>%
  count(AGE_YEAR) 

no_2023

## 2022

data <- suppressMessages(read_csv("Death 2022.csv"))

data_1 <- data %>% 
  mutate(
    DOD = mdy(DEATH_DATE),
    DOR = mdy(REG_DATE),
    Deathyear = year(DOD),
    Regyear = year(DOR)
    )

infant_data <- data_1 %>% 
  filter(AGE_YEAR %in% c(3))

no_2022 <- infant_data %>%
  count(AGE_YEAR)

no_2022

## 2021

data <- suppressMessages(read_csv("Death 2021.csv"))

data_1 <- data %>% 
  mutate(
    DOD = mdy(DEATH_DATE),
    DOR = mdy(REG_DATE),
    Deathyear = year(DOD),
    Regyear = year(DOR)
    )

infant_data <- data_1 %>% 
  filter(AGE_YEAR %in% c(2))

no_2021 <- infant_data %>%
  count(AGE_YEAR)

no_2021

## 2020

data <- suppressMessages(read_csv("Death 2020.csv"))

data_1 <- data %>% 
  mutate(
    DOD = mdy(DEATH_DATE),
    DOR = mdy(REG_DATE),
    Deathyear = year(DOD),
    Regyear = year(DOR)
    )

infant_data <- data_1 %>% 
  filter(AGE_YEAR %in% c(1))

no_2020 <- infant_data %>%
  count(AGE_YEAR)

no_2020

## 2019

data <- suppressMessages(read_csv("Death 2019.csv"))

data_1 <- data %>% 
  mutate(
    DOD = mdy(DEATH_DATE),
    DOR = mdy(REG_DATE),
    Deathyear = year(DOD),
    Regyear = year(DOR)
    )

infant_data <- data_1 %>% 
  filter(AGE_YEAR %in% c(0,1))

no_2019 <- infant_data %>%
  count(AGE_YEAR)

no_2019

total <- no_2019+no_2021+no_2020+no_2022+no_2023
total %>% 
  gt()


# Combine the results into one data frame
death_data <- tibble(
  year = c("2019","2020", "2021", "2022", "2023"),
  deaths = c(no_2019$n,no_2020$n, no_2021$n, no_2022$n, no_2023$n)
)

# Create a bar plot
ggplot(death_data, aes(x = year, y = deaths, fill = year)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Number of children Born in 2019 Who Died (2019-2023)",
    x = "Year of Death",
    y = "Number of Deaths"
  ) +
  theme_minimal() +
  scale_fill_manual(values = c("2019" = "purple",
                               "2020" = "blue",
                               "2021" = "green",
                               "2022" = "orange",
                               "2023" = "red")) +
  theme(legend.position = "none")

```

**Conclusion :**

Total no of children born in 2019 in the combined data of birth registration (2019-2023) = *476026*

Total no of children died which born in 2019 in the combined data of death registration (2019-2023) = *697*

Therefore,the probable no of children could join in 1st standard in 2025 basis on the birth and death registration data (2019-2023) = **475329**
